class Carte:


    """Initialise Couleur (entre 1 à 4), et Valeur (entre 1 à 13)"""

    def __init__(self, c, v):
        assert 1 <= c <= 4, "La couleur n'est pas correcte"
        assert 1 <= v <= 13, "La valeur n'est pas correcte"
        self.Couleur = c
        self.Valeur = v
        """Renvoie le nom de la Carte As, 2, ... 10,
        Valet, Dame, Roi"""

    def getNom(self):
        if (self.Valeur > 1 and self.Valeur < 11):
            return str(self.Valeur)
        elif self.Valeur == 11:
            return "Valet"
        elif self.Valeur == 12:
            return "Dame"
        elif self.Valeur == 13:
            return "Roi"
        else:
            return "As"
    """Renvoie la couleur de la Carte (parmi pique, coeur, carreau, trefle"""

    def getCouleur(self):
        return ['pique', 'coeur', 'carreau', 'trefle'][self.Couleur - 1]


class PaquetDeCarte:
    def __init__(self):
        self.contenu = []
    """Remplit le paquet de cartes"""

    def remplir(self):
        for couleur in range(1, 5):
            for valeur in range(1, 14):
                self.contenu.append(Carte(couleur, valeur))
    """Renvoie la Carte qui se trouve à la position donnée"""

    def getCarteAt(self, pos):
        # On n'obtient pas le 6 de coeur mais cela semble
        # impossible avec un remplissage 'logique'
        assert 1 <= pos <= 52, "Position non valide"
        return self.contenu[pos-1]
